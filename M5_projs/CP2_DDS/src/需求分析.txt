我需要为一个带有屏幕的嵌入式开发板和连接在其上的DDS波形发生器模块开发一个嵌入式程序。该程序向硬件用户提供一个操作界面，该界面通过用户与开发板上的按钮的交互式操作设置DDS的波形、频率和相位这三个参数。在程序设计的过程中可以暂时不考虑MCU型号、具体的按钮交互函数实现、向屏幕输出的具体函数和设置DDS的具体函数，这些都已经选定了相关的库。
在该开发板上所有按钮事件都关联到中断上，即是说通过触发中断来使程序知道有按钮事件，而不是通过轮询方式。

我希望的界面式样包含两个模式，默认模式和设置模式。
默认模式下，屏显当前选择的波形图片和频率的文字。
设置模式包含两个可切换页面，第一个页面是波形选择，通过按钮左右方向切换波形图片；第二个是屏显当前频率(十进制整数值)，可以设置该数字的每一位，具体地说是通过按钮左右方向选择要修改的位，通过按钮的上下方向对选择的位增加1或者减少1,并且要求支持进位和退位。


考虑我手头的几种摇杆配件的差异，我反复权衡了一下，感觉可能把摇杆配件上诸如按钮或其他附件数据设计成可扩展的形式比较好，在类中增加一个按钮读数成员不够合理，这样的设计如果遇到摇杆配件中集成更多的传感器就得增加更多的读数成员，读取的函数也会更加"定制化"而失去了可扩展性。我觉得在摇杆类和摇杆读取器类中仅保留x和y这两个方向的数据，在Joystick类update时仅从joystickreader类的读取函数调用时获取x和y，joystick基类的设计也仅处理读取x和y的情形，但还是分为直接读模拟信号、i2c读取和spi读取三种，三种通信方式的reader中保留对应方式通用的数据信息，比如总线类型通信需要的通信频率和物理引脚编号，i2c中还可以保留摇杆模块的i2c地址。原本joystick类中的用于模拟4向按钮的代码也应该全部提取到专门的按钮模拟器类中。

我希望你可以改变JoystickReader类的设计，让read方法采集的数据具有最大的灵活性，不假定摇杆本身的xy读数是8位还是16位以及是否有符号数，也不假定其他外设是按钮还是别的什么传感器，理由是：我持有的两个不同的摇杆模块，虽然都是i2c通信，但是具有不同的附加外设，并且提供的读数随寄存器不同，可以是8位有符号数和12位无符号数，其中一个还可以提供模块内ADC的原始读数，还可以读取固件版本，并且其上的按钮数量也不同，其中一个还具有rgb等，可以向其发送数据以控制颜色，可以想到完全有可能还有其他i2c摇杆模块可能集成了更多功能比如imu。然后是我之前说的"joystick类中的用于模拟4向按钮的代码单独提取出来"的详细想法是：考虑到摇杆四向运动模拟成4向按钮后，从设计逻辑和使用逻辑上，就可以当作按钮处理，包括挂接事件处理函数、区分单击连击或长按并触发相应的处理逻辑，以及做防抖等特殊处理。但"用摇杆模拟四向按钮"是我的特殊需求，通常的摇杆并不这么使用，因此我觉得应当将这部分逻辑从Joystick类中独立出来，而Joystick类里仅包含摇杆类设备的共性。因此JoystickToButton类(暂定这个名称，你也可以根据嵌入式行业的习惯起一个更好的名字)应当能够触发按钮类型外设可以触发的事件(中断)比如上面提到的单击连击长按等，但我是嵌入式新手，不清楚嵌入式库通常还为按钮提供了哪些事件、特殊处理或其他代码，你在设计这个类的时候需要考虑到这一点并设计成易于增加功能的形式。


经过参考模块制造商提供的示例代码库，我决定更改设计。新设计中，摇杆模块的class仅仅提供初始化和读取数据到相关成员变量的功能，这部分不需要你实现。然后设计一个事件触发框架，其实现包含一个用于“根据具体模块对象的特定成员值判断是否触发事件(设置事件flag)”的虚类，一个轮询线程(具体代码沿用前面提到的freertos线程和高精度睡眠函数)，一个列表(或者也可以是数组)用于"注册"刚刚提到的虚类的具体实现，然后在轮询线程的每次循环中执行所有注册到列表中的实例的"判断函数"。这个虚类并不和特定模块实例关联，它要做的事是根据注册时绑定的值和指定的计算公式来计算是否需要设置事件flag。所以这里遇到的问题是，如果是对单按钮判断，则只需要接收一个值，但如果是我们之前一直讨论的摇杆模拟4向按钮，则需要接收x和y两个值，那么应该如何设计接口以使其具有足够的通用性以适应不同的传入值（或许可以通过将具体模块的驱动实例关联到这个事件判断class的实例上？但请尽量减少这个事件判断class和模块class的耦合性）。以及需要考虑将事件回调放到另一个线程中执行的需求下，如何使回调和对应的存储事件flag的变量(或成员、或者是其他形式，由你根据需求选择合适的实现)关联起来。